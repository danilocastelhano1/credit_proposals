version: "3.9"

services:
  db:
    image: postgres:alpine
    volumes:
      - db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=api
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 5s
      retries: 20

  api:
    container_name: api_digital_sys
    build:
      context: .
    command:
      ["./start.sh",]
    volumes:
      - .:/api
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    volumes:
      - .:/digital_sys

  celery_worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      sh -c "celery -A digitalsys worker --pool=solo -l INFO"
    volumes:
      - .:/digital_sys
    env_file:
      - ./.env
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: django_celery_example_celery_beat
    command: >
      sh -c "celery -A digitalsys beat -l INFO"
    volumes:
      - .:/digital_sys
    env_file:
      - ./.env
    depends_on:
      - redis
      - db

volumes:
  db_data:
  static_volume:
  files_volume:
  digital_sys:
